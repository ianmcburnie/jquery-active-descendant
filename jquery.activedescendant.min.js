
(function($,window,document,undefined){$.fn.activeDescendant=function activeDescendant(collection,options){options=options||{};return this.each(function onEach(){var $this=$(this);var id=$this.prop('id');var useFixedActiveDescendantId=options.useFixedActiveDescendantId;var fixedActiveDescendantId;var $descendants;var getCurrentActiveDescendant=function(){return useFixedActiveDescendantId?$('#'+fixedActiveDescendantId):$('#'+$this.attr('aria-activedescendant'));};var updateActiveDescendantDom=function($activedescendant,$newActiveDescendant){if(useFixedActiveDescendantId){$activedescendant.removeAttr('id');$newActiveDescendant.prop('id',fixedActiveDescendantId);}else{$this.attr('aria-activedescendant',$newActiveDescendant.prop('id'));$activedescendant.removeClass('activedescendant');$newActiveDescendant.addClass('activedescendant');}};$this.nextId();$this.commonKeyDown();if(useFixedActiveDescendantId){fixedActiveDescendantId=$this.prop('id')+'-activedescendant';$this.attr('aria-activedescendant',fixedActiveDescendantId);}
$this.on('updateActiveDescendantCollection',function(e,collection){$descendants=$(collection);$descendants.nextId();$descendants.each(function(itemIdx){$(this).eq(0).data(id,{'activedescendant':itemIdx});});});$this.on('blur',function(){if(!useFixedActiveDescendantId){$('#'+$this.attr('aria-activedescendant')).removeClass('activedescendant');$this.removeAttr('aria-activedescendant');}});$this.on('downArrowKeyDown',function onDownArrowKeyDown(e){var $activedescendant=getCurrentActiveDescendant();var $newActiveDescendant;if($activedescendant.size()===0){$newActiveDescendant=$descendants.first();}else{var itemIdx=$activedescendant.data(id).activedescendant;var $nextEl=$descendants.eq(itemIdx+1);var hasNextEl=$nextEl.length===1;var $firstEl=$descendants.eq(0);$newActiveDescendant=(hasNextEl)?$nextEl:$firstEl;}
updateActiveDescendantDom($activedescendant,$newActiveDescendant);$this.trigger('activeDescendantChange',$newActiveDescendant);});$this.on('upArrowKeyDown',function onUpArrowKeyDown(e){var $activedescendant=getCurrentActiveDescendant();var $newActiveDescendant;if($activedescendant.size()===0){$newActiveDescendant=$descendants.last();}else{var itemIdx=$activedescendant.data(id).activedescendant;var $prevEl=$descendants.eq(itemIdx-1);var hasPrevEl=$prevEl.length===1;var $lastEl=$descendants.eq($descendants.length-1);$newActiveDescendant=(hasPrevEl)?$prevEl:$lastEl;}
updateActiveDescendantDom($activedescendant,$newActiveDescendant);$this.trigger('activeDescendantChange',$newActiveDescendant);});if(collection){$this.trigger('updateActiveDescendantCollection',[collection]);}});};}(jQuery,window,document));